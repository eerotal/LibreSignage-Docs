\hypertarget{classlibresignage_1_1api_1_1APIException}{}\section{libresignage\textbackslash{}api\textbackslash{}A\+P\+I\+Exception Class Reference}
\label{classlibresignage_1_1api_1_1APIException}\index{libresignage\textbackslash{}api\textbackslash{}\+A\+P\+I\+Exception@{libresignage\textbackslash{}api\textbackslash{}\+A\+P\+I\+Exception}}


Inheritance diagram for libresignage\textbackslash{}api\textbackslash{}A\+P\+I\+Exception\+:
% FIG 0


Collaboration diagram for libresignage\textbackslash{}api\textbackslash{}A\+P\+I\+Exception\+:
% FIG 1
\subsection*{Static Public Member Functions}
\begin{DoxyCompactItemize}
\item 
static \hyperlink{classlibresignage_1_1api_1_1APIException_a6e6f6517da185d0dbad856b5ef7ab190}{as\+\_\+json} (\textbackslash{}Throwable \$e)
\item 
static \hyperlink{classlibresignage_1_1api_1_1APIException_a702f71f5d02343cc52f597aaaf09a45f}{setup} ()
\end{DoxyCompactItemize}


\subsection{Detailed Description}
\hyperlink{classlibresignage_1_1api_1_1APIException}{A\+P\+I\+Exception} class for sending error responses to clients. This class can either be instantiated directly or you can rely on the global error handler to convert all exceptions to A\+P\+I\+Exceptions. If you\textquotesingle{}re writing code for the A\+PI system itself, try to stick to directly creating A\+P\+I\+Exceptions though, since it\textquotesingle{}s a bit more flexible. Call \hyperlink{classlibresignage_1_1api_1_1APIException_a702f71f5d02343cc52f597aaaf09a45f}{A\+P\+I\+Exception\+::setup()} to setup the global error handler. 

Definition at line 20 of file A\+P\+I\+Exception.\+php.



\subsection{Member Function Documentation}
\mbox{\Hypertarget{classlibresignage_1_1api_1_1APIException_a6e6f6517da185d0dbad856b5ef7ab190}\label{classlibresignage_1_1api_1_1APIException_a6e6f6517da185d0dbad856b5ef7ab190}} 
\index{libresignage\+::api\+::\+A\+P\+I\+Exception@{libresignage\+::api\+::\+A\+P\+I\+Exception}!as\+\_\+json@{as\+\_\+json}}
\index{as\+\_\+json@{as\+\_\+json}!libresignage\+::api\+::\+A\+P\+I\+Exception@{libresignage\+::api\+::\+A\+P\+I\+Exception}}
\subsubsection{\texorpdfstring{as\+\_\+json()}{as\_json()}}
{\footnotesize\ttfamily static libresignage\textbackslash{}api\textbackslash{}\+A\+P\+I\+Exception\+::as\+\_\+json (\begin{DoxyParamCaption}\item[{\textbackslash{}Throwable}]{\$e }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [static]}}

Get the A\+PI J\+S\+ON representation of an Exception.

\begin{DoxyReturn}{Returns}
string The J\+S\+ON representation of the Exception. 
\end{DoxyReturn}

\begin{DoxyExceptions}{Exceptions}
{\em Int\+Exception} & If J\+S\+ON encoding fails. \\
\hline
\end{DoxyExceptions}


Definition at line 27 of file A\+P\+I\+Exception.\+php.

\mbox{\Hypertarget{classlibresignage_1_1api_1_1APIException_a702f71f5d02343cc52f597aaaf09a45f}\label{classlibresignage_1_1api_1_1APIException_a702f71f5d02343cc52f597aaaf09a45f}} 
\index{libresignage\+::api\+::\+A\+P\+I\+Exception@{libresignage\+::api\+::\+A\+P\+I\+Exception}!setup@{setup}}
\index{setup@{setup}!libresignage\+::api\+::\+A\+P\+I\+Exception@{libresignage\+::api\+::\+A\+P\+I\+Exception}}
\subsubsection{\texorpdfstring{setup()}{setup()}}
{\footnotesize\ttfamily static libresignage\textbackslash{}api\textbackslash{}\+A\+P\+I\+Exception\+::setup (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [static]}}

Setup exception handling for the A\+PI system. 

Definition at line 47 of file A\+P\+I\+Exception.\+php.



The documentation for this class was generated from the following file\+:\begin{DoxyCompactItemize}
\item 
src/api/\hyperlink{APIException_8php}{A\+P\+I\+Exception.\+php}\end{DoxyCompactItemize}
